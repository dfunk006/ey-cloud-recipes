# Built with Chef recipe nginx_conf
# @version 2.5
# @indexVersion 250

upstream upstream_bfwa {
    server unix:/var/run/engineyard/php-fpm_bfwa.sock;
}

# Include additional server blocks.  File copied in via deploy hooks
include /etc/nginx/servers/bfwa/additional_server_blocks.customer;

server {
    listen      80;
    server_name _;

    port_in_redirect off;

    root  /data/bfwa/current//;
    index index.php index.html index.htm;

    access_log /var/log/engineyard/nginx/bfwa.access.log main;
    error_log  /var/log/engineyard/nginx/bfwa.error.log  notice;

    client_max_body_size 100M;
    error_page 404 /404.html;
    error_page 500 502 504 /500.html;

    if (-f /data/bfwa/current/public/system/maintenance.html) {
        return 503;
    }

    location = /favicon.ico {
        access_log     off;
        log_not_found  off;
    }

	# Include additional location blocks.  File copied in via deploy hooks
	include /etc/nginx/servers/bfwa/additional_location_blocks.customer;

    # -----------------------------------------------------------------------------------------------
    # Access Restrictions: Protect ProcessWire system files
    # -----------------------------------------------------------------------------------------------

    # Block access to ProcessWire system files
    location ~ \.(inc|info|module|sh|sql)$ {
        deny all;
    }

    # Block access to any file or directory that begins with a period
    location ~ /\. {
        deny all;
    }

    # Block access to protected assets directories
    location ~ ^/(site|site-[^/]+)/assets/(cache|logs|backups|sessions|config|install|tmp)($|/.*$) {
        deny all;
    }

    # Block acceess to the /site/install/ directory
    location ~ ^/(site|site-[^/]+)/install($|/.*$) {
        deny all;
    }

    # Block dirs in /site/assets/ dirs that start with a hyphen
    location ~ ^/(site|site-[^/]+)/assets.*/-.+/.* {
        deny all;
    }

    # Block access to /wire/config.php, /site/config.php, /site/config-dev.php, and /wire/index.config.php
    location ~ ^/(wire|site|site-[^/]+)/(config|index\.config|config-dev)\.php$ {
        deny all;
    }

    # Block access to any PHP-based files in /templates-admin/
    location ~ ^/(wire|site|site-[^/]+)/templates-admin($|/|/.*\.(php|html?|tpl|inc))$ {
        deny all;
    }

    # Block access to any PHP or markup files in /site/templates/
    location ~ ^/(site|site-[^/]+)/templates($|/|/.*\.(php|html?|tpl|inc))$ {
        deny all;
    }

    # Block access to any PHP files in /site/assets/
    location ~ ^/(site|site-[^/]+)/assets($|/|/.*\.php)$ {
        deny all;
    }

    # Block access to any PHP files in core or core module directories
    location ~ ^/wire/(core|modules)/.*\.(php|inc|tpl|module)$ {
        deny all;
    }

    # Block access to any PHP files in /site/modules/
    location ~ ^/(site|site-[^/]+)/modules/.*\.(php|inc|tpl|module)$ {
        deny all;
    }

    # Block access to any software identifying txt files
    location ~ ^/(COPYRIGHT|INSTALL|README|htaccess)\.(txt|md)$ {
        deny all;
    }

    # Block all http access to the default/uninstalled site-default directory
    location ~ ^/site-default/ {
        deny all;
    }

    # -----------------------------------------------------------------------------------------------
    # This location processes all other requests. If the request is for a file or directory that
    # physically exists on the server, then load the file. Else give control to ProcessWire.
    # -----------------------------------------------------------------------------------------------

    location / {
        try_files $uri $uri/ /index.php?it=$uri&$args;
    }

    # -----------------------------------------------------------------------------------------------
    # Pass .php requests to fastcgi socket
    # -----------------------------------------------------------------------------------------------

    location ~ \.php$ {
        try_files $uri =404;

        include                     /etc/nginx/common/proxy.conf;
        include                     /etc/nginx/common/fcgi.conf;
        fastcgi_pass                upstream_bfwa;
        fastcgi_index               index.php;
        fastcgi_intercept_errors    off;
        fastcgi_param               SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param               SERVER_NAME $hostname;
    }

    # -----------------------------------------------------------------------------------------------
    # If the request is for a static file, then set expires header and disable logging.
    # Give control to ProcessWire if the requested file or directory is non-existing.
    # -----------------------------------------------------------------------------------------------

    location ~* ^.+\.(jpg|js|jpeg|png|ico|gif|txt|js|css|swf|zip|rar|avi|exe|mpg|mp3|wav|mpeg|asf|wmv)$ {
        #try_files $uri /index.php$is_args$args;
        expires 24h;
        log_not_found off;
        access_log off;
        try_files $uri $uri/ /index.php?it=$uri&$args;
    }

    location = /500.html {
        root /data/bfwa/current;
    }

    error_page 503 @maint;
    location @maint {
        root /data/bfwa/current/public/system;
        if (!-f $request_filename) {
            rewrite ^(.*)$ /maintenance.html break;
        }
        return 200;
    }

    include /etc/nginx/servers/bfwa/custom.conf;
}
